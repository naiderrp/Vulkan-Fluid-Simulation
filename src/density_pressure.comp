#version 450

layout (local_size_x = 128) in;

layout(binding = 0) buffer in_positions {
    vec2 position[];
};

layout(binding = 1) buffer in_velocities {
    vec2 velocity[];
};

layout(binding = 2) buffer in_forces {
    vec2 force[];
};

layout(binding = 3) buffer in_densities {
    float density[];
};

layout(binding = 4) buffer in_pressures {
    float pressure[];
};

void main(){
    uint i = gl_GlobalInvocationID.x;
    
    if (i > position.length()) return;

    const float pi = 3.1415927410125732421875f;
    const float radius = 0.005f;
    const float resting_density = 1000.0f;
    const float m = 0.02;
    const float h = 4 * radius;

    const float stiffness = 2000.f;

    const int num = position.length();

    float density_sum = 0.f;

    for (int j = 0; j < num; ++j){
        vec2 delta = position[i] - position[j];
        float r = length(delta);
        if (r < h)
            density_sum += m * /* poly6 kernel */ 315.f * pow(h * h - r * r, 3) / (64.f * pi * pow(h, 9));
    }

    density[i] = density_sum;

    pressure[i] = max(stiffness * (density_sum - resting_density), 0.f);
}